name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: |
        cd eiretube  # Navigate to the directory containing the package.json file
        npm install
        
    - name: Build frontend
      run: |
        cd eiretube
        npm run build

    - name: Create build directory in backend
      run: |
        mkdir -p eiretube/backend/build

    - name: Copy frontend build to backend
      run: |
        cp -r eiretube/build/* eiretube/backend/build/

    - name: Zip files for deployment
      run: |
        cd eiretube/backend
        zip -r deploy-package.zip .

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_KEY }}

    - name: Copy files to EC2
      run: |
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ ec2-user@ec2-16-171-253-100.eu-north-1.compute.amazonaws.com:eiretube/eiretube

    - name: Install dotenv and other dependencies
      run: |
        ssh -t -o StrictHostKeyChecking=no ec2-user@ec2-16-171-253-100.eu-north-1.compute.amazonaws.com << 'EOF'
          cd eiretube/eiretube
          npm install dotenv --save
          npm install react-scripts --save
          npm install
          npm run build || echo "Build failed"
        EOF

    - name: Run build and start application
      run: |
        ssh -t -o StrictHostKeyChecking=no ec2-user@ec2-16-171-253-100.eu-north-1.compute.amazonaws.com << 'EOF'
          cd eiretube/eiretube/backend
          fuser -k 5000/tcp || true
          npm install
          export MONGODB_URI=${{ secrets.MONGODB_URI }}
          npm start
        EOF
    - name: Check running processes
      run: |
        ssh -t -o StrictHostKeyChecking=no ec2-user@ec2-16-171-253-109.eu-north-1.compute.amazonaws.com << 'EOF'
          ps aux | grep node # or the relevant process name
        EOF


